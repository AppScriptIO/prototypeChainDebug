"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.classDecorator = prototypeChainDebug;exports.default = void 0;



function prototypeChainDebug(Class) {


  Class.meta = {
    Class: `${Class.name}`,
    Type: 'static' };



  Class.prototype.meta = {
    Class: `${Class.name}`,
    Type: 'prototype' };



  Class = new Proxy(Class, {});


















  return Class;
}var _default =


prototypeChainDebug;exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9zY3JpcHQuanMiXSwibmFtZXMiOlsicHJvdG90eXBlQ2hhaW5EZWJ1ZyIsIkNsYXNzIiwibWV0YSIsIm5hbWUiLCJUeXBlIiwicHJvdG90eXBlIiwiUHJveHkiXSwibWFwcGluZ3MiOiI7Ozs7QUFJQSxTQUFTQSxtQkFBVCxDQUE2QkMsS0FBN0IsRUFBb0M7OztBQUdoQ0EsRUFBQUEsS0FBSyxDQUFDQyxJQUFOLEdBQWE7QUFDVEQsSUFBQUEsS0FBSyxFQUFHLEdBQUVBLEtBQUssQ0FBQ0UsSUFBSyxFQURaO0FBRVRDLElBQUFBLElBQUksRUFBRSxRQUZHLEVBQWI7Ozs7QUFNQUgsRUFBQUEsS0FBSyxDQUFDSSxTQUFOLENBQWdCSCxJQUFoQixHQUF1QjtBQUNuQkQsSUFBQUEsS0FBSyxFQUFHLEdBQUVBLEtBQUssQ0FBQ0UsSUFBSyxFQURGO0FBRW5CQyxJQUFBQSxJQUFJLEVBQUUsV0FGYSxFQUF2Qjs7OztBQU1BSCxFQUFBQSxLQUFLLEdBQUcsSUFBSUssS0FBSixDQUFVTCxLQUFWLEVBQWlCLEVBQWpCLENBQVI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsU0FBT0EsS0FBUDtBQUNILEM7OztBQUdjRCxtQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWRkcyBwcm90b3R5cGUgaW5mb3JtYXRpb24gb24gc3RhdGljIGNsYXNzZXMsIHByb3RvdHlwZXMsIGFuZCBpbnN0YW5jZXMuXG4gKiBSZXR1cm5zIGEgcHJveHkgd2l0aCB0cmFwcyB0byBhZGQgbWV0YSBpbmZvcm1hdGlvbi5cbiAqL1xuZnVuY3Rpb24gcHJvdG90eXBlQ2hhaW5EZWJ1ZyhDbGFzcykge1xuXG4gICAgLy8gU3RhdGljIGNsYXNzXG4gICAgQ2xhc3MubWV0YSA9IHtcbiAgICAgICAgQ2xhc3M6IGAke0NsYXNzLm5hbWV9YCxcbiAgICAgICAgVHlwZTogJ3N0YXRpYydcbiAgICB9XG5cbiAgICAvLyBQcm90b3R5cGVcbiAgICBDbGFzcy5wcm90b3R5cGUubWV0YSA9IHtcbiAgICAgICAgQ2xhc3M6IGAke0NsYXNzLm5hbWV9YCxcbiAgICAgICAgVHlwZTogJ3Byb3RvdHlwZSdcbiAgICB9XG5cbiAgICAvLyAvLyBJbnN0YW5jZVxuICAgIENsYXNzID0gbmV3IFByb3h5KENsYXNzLCB7XG4gICAgLy8gICAgIC8vIGNvbnN0cnVjdDogZnVuY3Rpb24odGFyZ2V0LCBhcmd1bWVudHNMaXN0LCBuZXdUYXJnZXQpIHsgLy8gbm90IHdvcmtpbmcgY2F1c2VzIGVycm9ycyAtIGJlY2F1c2UgdGhlIG9yaWdpbmFsIHN1YmNsYXNzIGlzIG5vdCBiZWluZyB1c2VkIHRvIGNyZWF0ZSB0aGUgaW5zdGFuY2UgaS5lLiBzdXBlcmNsYXNzIGNyZWF0ZXMgdGhlIGlzbnRhbmNlICYgbmV3VGFyZ2V0IGlzbid0IGFsd2F5cyBwb2ludGluZyB0byB0aGUgb3JpZ2luYWwgY2xhc3MgY2FsbGVkLlxuICAgIC8vICAgICAvLyAgICAgbGV0IGluc3RhbmNlID0gbmV3IHRhcmdldCguLi5hcmd1bWVudHNMaXN0KVxuICAgIC8vICAgICAvLyAgICAgaW5zdGFuY2UubWV0YSA9IHtcbiAgICAvLyAgICAgLy8gICAgICAgICBDbGFzczogYCR7Q2xhc3MubmFtZX1gLFxuICAgIC8vICAgICAvLyAgICAgICAgIFR5cGU6ICdpbnN0YW5jZSdcbiAgICAvLyAgICAgLy8gICAgIH1cbiAgICAvLyAgICAgLy8gICAgIHJldHVybiBpbnN0YW5jZSBcbiAgICAvLyAgICAgLy8gfSxcbiAgICAvLyAgICAgLy8gYXBwbHkgaXMgY2FsbGVkLCB3aGVuICduZXcnIGlzIGludm9rZWQsIGJlY2F1c2Ugb2YgdGhlIEVTNSB0cmFuc3BpbGF0aW9uIG1pbWlja2luZyBjbGFzcyBmZWF0dXJlLiBcbiAgICAvLyAgICAgLy8gYXBwbHk6IGZ1bmN0aW9uKHRhcmdldCwgdGhpc0FyZywgYXJndW1lbnRzTGlzdCkge1xuICAgIC8vICAgICAvLyAgICAgY29uc29sZS5sb2codGFyZ2V0KVxuICAgIC8vICAgICAvLyAgICAgY29uc29sZS5sb2codGhpc0FyZylcbiAgICAvLyAgICAgLy8gICAgIGNvbnNvbGUubG9nKGFyZ3VtZW50c0xpc3QpXG4gICAgLy8gICAgIC8vICAgICBsZXQgaW5zdGFuY2UgPSBuZXcgdGFyZ2V0KC4uLmFyZ3VtZW50c0xpc3QpXG4gICAgLy8gICAgIC8vICAgICByZXR1cm4gaW5zdGFuY2VcbiAgICAvLyAgICAgLy8gfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIENsYXNzXG59XG5cbmV4cG9ydCB7IHByb3RvdHlwZUNoYWluRGVidWcgYXMgY2xhc3NEZWNvcmF0b3J9XG5leHBvcnQgZGVmYXVsdCBwcm90b3R5cGVDaGFpbkRlYnVnIl19